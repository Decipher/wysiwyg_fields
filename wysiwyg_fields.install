<?php
/**
 * @file
 * Install, update and uninstall functions for the Wysiwyg Fields module.
 */

/**
 * Implements hook_requirements().
 */
// @TODO - Fix - Triggers incorrectly before jQuery UI is installed. Remove?
//function wysiwyg_fields_requirements($phase) {
//  $requirements = array();
//  // Ensure translations don't break at install time
//  $t = get_t();
//
//  // Check for jQuery UI theme.
//  $jquery_ui_theme = file_exists(drupal_get_path('module', 'jquery_ui') . '/themes/base/ui.all.css') || file_exists(drupal_get_path('module', 'jquery_ui') . '/themes/default/ui.all.css');
//  $requirements['jquery_ui_theme'] = array(
//    'description' => $jquery_ui_theme ? '' : $t('No jQuery UI theme found, please download the appropriate files from: !url', array('!url' => l('http://blog.jqueryui.com/2010/02/jquery-ui-download-builderthemeroller-status/', 'http://blog.jqueryui.com/2010/02/jquery-ui-download-builderthemeroller-status/'))),
//    'severity' => $jquery_ui_theme ? REQUIREMENT_OK :  REQUIREMENT_ERROR,
//  );
//  if ($phase == 'runtime') {
//    $requirements['jquery_ui_theme']['title'] = $t('jQuery UI theme');
//    $requirements['jquery_ui_theme']['value'] = $jquery_ui_theme ? $t('Exists') : $t('Missing');
//  }
//
//  return $requirements;
//}

/**
 * Implements hook_enable().
 */
function wysiwyg_fields_enable() {
  variable_set('wysiwyg_fields_enable', TRUE);

  // Enable Wysiwyg Fields filter on all Input formats.
  // Can't use filter_formats() as it fails to return all values when called via
  // Drush.
  db_delete('filter')->condition('name', 'wysiwyg_fields')->execute();
  $formats = db_select('filter_format', 'f')->fields('f')->execute();
  foreach ($formats as $format) {
    db_insert('filter')
      ->fields(array(
        'format' => $format->format,
        'module' => 'wyswyg_fields',
        'name' => 'wysiwyg_fields',
        'status' => 1,
        'settings' => serialize(array()),
      ))
      ->execute();
  }
}

/**
 * Implements hook_requirements().
 */
function wysiwyg_fields_requirements($phase) {
  $requirements = array();
  // Ensure translations don't break at install time
  $t = get_t();

  if (!variable_get('clean_url', TRUE)) {
    $requirements['clean_urls'] = array(
      'title' => t('Clean URLs'),
      'severity' => REQUIREMENT_ERROR,
      'value' => $t('Disabled'),
      'description' => $t('Clean URLs is required for Wysiwyg Fields to function.'),
    );
  }

  return $requirements;
}
